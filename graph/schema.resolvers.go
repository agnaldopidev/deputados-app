package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"

	"github.com/agnaldopidev/deputados-app/graph/model"
)

// CreateTodo is the resolver for the createTodo field.
//func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
//	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
//}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}

// Mutation returns MutationResolver implementation.
//func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

func (r *queryResolver) ListDeputados(ctx context.Context) ([]*model.Deputado, error) {
	deputados, err := r.Resolver.DeputadoRepo.ListOrders()
	if err != nil {
		return nil, err
	}

	var result []*model.Deputado
	for _, o := range deputados {
		result = append(result, &model.Deputado{
			ID:          int(o.ID),
			Nome:        o.Nome,
			Partido:     o.Partido,
			NumeroVotos: int(o.NumeroVotos),
		})
	}
	return result, nil
}
